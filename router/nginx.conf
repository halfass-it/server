worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    keepalive_timeout 60;
    types_hash_max_size 4096;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Include SSL parameters
    include /etc/nginx/snippets/self-signed.conf;
    include /etc/nginx/snippets/ssl-params.conf;

    # Bad user agent blocking
    map $http_user_agent $bad_ua {
        default 0;
        "~*HALFASS" 1;
    }

    upstream server_socks {
        least_conn;
        server 127.0.0.1:5001;
        server 127.0.0.1:5002;
        server 127.0.0.1:5003;
        server 127.0.0.1:5004;
    }

    upstream auth_server_socks {
        least_conn;
        server 127.0.0.1:6001;
        server 127.0.0.1:6002;
    }

    upstream game_server_socks {
        least_conn;
        server 127.0.0.1:7001;
        server 127.0.0.1:7002;
    }

    server {
        listen 127.0.0.1:5000;
        server_name localhost;

        location / {
            proxy_pass http://server_socks;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header User-Agent $http_user_agent;
        }
    }

    server {
        listen 127.0.0.1:6000;
        server_name localhost;

        location / {
            proxy_pass http://auth_server_socks;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header User-Agent $http_user_agent;
        }
    }

    server {
        listen 127.0.0.1:7000;
        server_name localhost;

        location / {
            proxy_pass http://game_server_socks;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header User-Agent $http_user_agent;
        }
    }

    server {
        listen 80;
        server_name localhost;
    
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        server_name localhost;

        location / {
            proxy_pass http://localhost:5000/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header User-Agent $http_user_agent;
        }

        # Apply SSL parameters
        include /etc/nginx/snippets/self-signed.conf;
        include /etc/nginx/snippets/ssl-params.conf;
    }
}
